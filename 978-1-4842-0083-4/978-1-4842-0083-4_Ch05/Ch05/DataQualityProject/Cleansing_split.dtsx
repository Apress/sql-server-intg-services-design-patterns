<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/31/2011 4:07:32 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="MMASSON6"
  DTS:CreatorName="REDMOND\mmasson"
  DTS:DTSID="{FAEDC291-B18C-4C92-892A-A34BAAF14362}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.1750.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="Cleansing_split"
  DTS:PackageType="5"
  DTS:VersionBuild="31"
  DTS:VersionGUID="{E4FB2DDF-4EF0-4C99-8CD9-03C7BC077A0A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[AdventureWorksDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{16BE0636-CE94-4567-BD90-B090D35EBB7E}"
      DTS:ObjectName="AdventureWorksDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=AdventureWorksDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DQS]"
      DTS:CreationName="DQS"
      DTS:DTSID="{B907667E-E554-4A04-B8F4-38B4249A7689}"
      DTS:ObjectName="DQS">
      <DTS:ObjectData>
        <InnerObject>
          <ServerName
            Type="8"
            Value="localhost" />
        </InnerObject>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DQS Cleansing Connection Manager.localhost]"
      DTS:CreationName="DQS"
      DTS:DTSID="{8ef88286-d9de-499f-b781-a9545216347a}"
      DTS:ObjectName="DQS Cleansing Connection Manager.localhost">
      <DTS:ObjectData>
        <InnerObject>
          <ServerName
            Type="8"
            Value="localhost" />
        </InnerObject>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:Description="Number of rows to output at the source."
      DTS:DTSID="{C097FDF8-B219-4DD2-921A-66F407F369CA}"
      DTS:ObjectName="NumberOfRows">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">5000</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3ECEFAFC-A77C-482C-AA71-455BCB691434}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="{5918251B-2970-45A4-AB5F-01C3C588FE5A}"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F161BC75-2FDA-4091-A022-5C1D34A9028A}"
      DTS:ExecutableType="{5918251B-2970-45A4-AB5F-01C3C588FE5A}"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Conditional Split 1"
              componentClassID="{7F88F654-4E20-4D14-84F4-AF9C925D3087}"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Conditional Split 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Conditional Split 1.Inputs[Conditional Split Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Conditional Split 1.Outputs[1]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="1"
                  synchronousInputId="Package\Data Flow Task\Conditional Split 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Script Component.Outputs[Locations].Columns[id]} % 2 == 1</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">id % 2 == 1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split 1.Outputs[0]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="0"
                  synchronousInputId="Package\Data Flow Task\Conditional Split 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task\Conditional Split 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\DQS Cleansing"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="DQS Cleansing component"
              name="DQS Cleansing"
              usesDispositions="true"
              validateExternalMetadata="False">
              <properties>
                <property
                  dataType="System.Int64"
                  name="KnowledgebaseName"
                  typeConverter="NOTBROWSABLE">1000000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.Ssdqs.Component.DataCorrection.Logic.DataCorrectionComponent, Microsoft.Ssdqs.Component.DataCorrection, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  name="PackageName">Cleansing_split</property>
                <property
                  dataType="System.Boolean"
                  name="EncryptConnection">false</property>
                <property
                  dataType="System.Boolean"
                  name="StandardizeOutput">true</property>
                <property
                  dataType="System.Boolean"
                  name="ConfidenceOutputColumnExists">true</property>
                <property
                  dataType="System.Boolean"
                  name="ReasonOutputColumnExists">false</property>
                <property
                  dataType="System.Boolean"
                  name="AppendedDataOutputColumnExists">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\DQS Cleansing.Connections[DQS]"
                  connectionManagerID="Package.ConnectionManagers[DQS]"
                  connectionManagerRefId="Package.ConnectionManagers[DQS]"
                  name="DQS" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\DQS Cleansing.Inputs[DQS Cleansing Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="DQS Cleansing Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Inputs[DQS Cleansing Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="SourceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Inputs[DQS Cleansing Input].Columns[CountyRegionCode]"
                      cachedDataType="wstr"
                      cachedLength="5"
                      cachedName="CountyRegionCode"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountyRegionCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="SourceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Source]}</property>
                        <property
                          dataType="System.String"
                          name="DomainName">Country/Region (three-letter leading)</property>
                        <property
                          dataType="System.Int64"
                          name="DomainId">1003</property>
                        <property
                          dataType="System.Boolean"
                          name="CorrectedOutputDataTypeProperties">false</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="CorrectedOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Output]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="StatusOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Status]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ConfidenceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Confidence]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Inputs[DQS Cleansing Input].Columns[CountryRegionName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="CountryRegionName"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountryRegionName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="SourceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Source]}</property>
                        <property
                          dataType="System.String"
                          name="DomainName">Country/Region</property>
                        <property
                          dataType="System.Int64"
                          name="DomainId">1001</property>
                        <property
                          dataType="System.Boolean"
                          name="CorrectedOutputDataTypeProperties">false</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="CorrectedOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Output]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="StatusOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Status]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ConfidenceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Confidence]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output]"
                  name="DQS Cleansing Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Source]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Source]"
                      name="CountyRegionCode_Source" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Source]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Source]"
                      name="CountryRegionName_Source" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[Record Status]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[Record Status]"
                      name="Record Status" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Output]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Output]"
                      name="CountyRegionCode_Output" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Status]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Status]"
                      name="CountyRegionCode_Status" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Confidence]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Confidence]"
                      name="CountyRegionCode_Confidence" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Output]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Output]"
                      name="CountryRegionName_Output" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Status]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Status]"
                      name="CountryRegionName_Status" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Confidence]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Confidence]"
                      name="CountryRegionName_Confidence" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\DQS Cleansing 1"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="DQS Cleansing component"
              name="DQS Cleansing 1"
              usesDispositions="true"
              validateExternalMetadata="False">
              <properties>
                <property
                  dataType="System.Int64"
                  name="KnowledgebaseName"
                  typeConverter="NOTBROWSABLE">1000000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.Ssdqs.Component.DataCorrection.Logic.DataCorrectionComponent, Microsoft.Ssdqs.Component.DataCorrection, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  name="PackageName">Cleansing_split</property>
                <property
                  dataType="System.Boolean"
                  name="EncryptConnection">false</property>
                <property
                  dataType="System.Boolean"
                  name="StandardizeOutput">true</property>
                <property
                  dataType="System.Boolean"
                  name="ConfidenceOutputColumnExists">true</property>
                <property
                  dataType="System.Boolean"
                  name="ReasonOutputColumnExists">false</property>
                <property
                  dataType="System.Boolean"
                  name="AppendedDataOutputColumnExists">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\DQS Cleansing 1.Connections[DQS]"
                  connectionManagerID="Package.ConnectionManagers[DQS Cleansing Connection Manager.localhost]"
                  connectionManagerRefId="Package.ConnectionManagers[DQS Cleansing Connection Manager.localhost]"
                  name="DQS" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\DQS Cleansing 1.Inputs[DQS Cleansing Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="DQS Cleansing Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Inputs[DQS Cleansing Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="SourceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Inputs[DQS Cleansing Input].Columns[CountyRegionCode]"
                      cachedDataType="wstr"
                      cachedLength="5"
                      cachedName="CountyRegionCode"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountyRegionCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="SourceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Source]}</property>
                        <property
                          dataType="System.String"
                          name="DomainName">Country/Region (three-letter leading)</property>
                        <property
                          dataType="System.Int64"
                          name="DomainId">1003</property>
                        <property
                          dataType="System.Boolean"
                          name="CorrectedOutputDataTypeProperties">false</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="CorrectedOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Output]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="StatusOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Status]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ConfidenceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Confidence]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Inputs[DQS Cleansing Input].Columns[CountryRegionName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="CountryRegionName"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountryRegionName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="SourceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Source]}</property>
                        <property
                          dataType="System.String"
                          name="DomainName">Country/Region</property>
                        <property
                          dataType="System.Int64"
                          name="DomainId">1001</property>
                        <property
                          dataType="System.Boolean"
                          name="CorrectedOutputDataTypeProperties">false</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="CorrectedOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Output]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="StatusOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Status]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ConfidenceOutputLineageId">#{Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Confidence]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output]"
                  name="DQS Cleansing Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Source]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Source]"
                      name="CountyRegionCode_Source" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Source]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Source]"
                      name="CountryRegionName_Source" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[Record Status]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[Record Status]"
                      name="Record Status" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Output]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Output]"
                      name="CountyRegionCode_Output" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Status]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Status]"
                      name="CountyRegionCode_Status" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Confidence]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountyRegionCode_Confidence]"
                      name="CountyRegionCode_Confidence" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Output]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Output]"
                      name="CountryRegionName_Output" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Status]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Status]"
                      name="CountryRegionName_Status" />
                    <outputColumn
                      refId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Confidence]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output].Columns[CountryRegionName_Confidence]"
                      name="CountryRegionName_Confidence" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Row Count"
              componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::RowCount</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Data Flow Task\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Row Count 1"
              componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count 1">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::RowCount</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Row Count 1.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Row Count 1.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Data Flow Task\Row Count 1.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    readonly string[] CountryCode = { "FR", "GB", "US", "DE", "CA" };
    readonly string[] CountryName = { "France", "United Kingdom", "United States", "Germany", "Canada" };
    Random random;

    public override void  PreExecute()
    {
        // Use static seed so we get the same values each time
 	    random = new Random(1);
    }

    public override void CreateNewOutputRows()
    {
        int maxRows = Variables.NumberOfRows;
        for (int i = 0; i < maxRows; i++)
        {
            // Add new row
            LocationsBuffer.AddRow();

            // Generate our next index
            int index = random.Next(CountryCode.Length);

            LocationsBuffer.id = i + 1;
            LocationsBuffer.CountyRegionCode = GetCountryCode(index);
            LocationsBuffer.CountryRegionName = GetCountryName(index);
        }
    }

    public string GetCountryCode(int index)
    {
        return CountryCode[index];
    }

    public string GetCountryName(int index)
    {
        string country = CountryName[index];
        StringBuilder sb = new StringBuilder(country);
        
        // modify 0 to 2 characters in the string
        int numCharsToChange = random.Next(3);
        for (int i = 0; i < numCharsToChange; i++)
        {
            char c = (char)((short) 'a' + random.Next(26));
            int pos = random.Next(country.Length);
            sb[pos] = c;
        }

        return sb.ToString();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_74e9d75a988f40cfabf16d60232e36ea.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6B6BA514-43FF-4EF2-85E4-8022C600BDD9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_74e9d75a988f40cfabf16d60232e36ea</RootNamespace>
    <AssemblyName>SC_74e9d75a988f40cfabf16d60232e36ea</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class LocationsBuffer: ScriptBuffer

{
    public LocationsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 id
    {
        set
        {
            this[0] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CountyRegionCode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CountyRegionCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CountryRegionName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CountryRegionName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public LocationsBuffer LocationsBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != LocationsBuffer)
        {
            LocationsBuffer.SetEndOfRowset();
            LocationsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Locations"))
            {
                LocationsBuffer = new LocationsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 NumberOfRows
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["NumberOfRows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_74e9d75a988f40cfabf16d60232e36ea.Properties.Settings.get_Default():SC_74e9d75a988f40cfabf16d60232e36ea.Properties.Sett" +
    "ings")]

namespace SC_74e9d75a988f40cfabf16d60232e36ea.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_74e9d75a988f40cfabf16d60232e36ea</msb:CodeName>
		<msb:DisplayName>SC_74e9d75a988f40cfabf16d60232e36ea</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{6E43C762-91BD-4AD4-BD5A-09D3E1324602}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_74e9d75a988f40cfabf16d60232e36ea.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_74e9d75a988f40cfabf16d60232e36ea")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_74e9d75a988f40cfabf16d60232e36ea")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_74e9d75a988f40cfabf16d60232e36ea.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_74e9d75a988f40cfabf16d60232e36ea.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_74e9d75a988f40cfabf16d60232e36ea.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_74e9d75a988f40cfabf16d60232e36ea.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_74e9d75a988f40cfabf16d60232e36ea.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_74e9d75a988f40cfabf16d60232e36ea.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAqksU4AAAAAAAAAAOAAAiELAQgAABoAAAAIAAAAAAAAHjgA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMw3AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
OAAAAAAAAEgAAAACAAUAWCQAAHQTAAABAAAAAAAAAKAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMVAAAGfQEAAAQCAnMWAAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvEwAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzCwAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
Bio2AhdzEQAACn0GAAAEKgAAABMwAwBqAAAAAgAAEQJ7AgAABG8XAAAGChYLK1UCewMAAARvEgAA
BgJ7BgAABAJ7BAAABI5pbxIAAAoMAnsDAAAEBxdYbwwAAAYCewMAAAQCCCgIAAAGbw4AAAYCewMA
AAQCCCgJAAAGbxAAAAYHF1gLBwYypyomAnsEAAAEA5oqEzADAGAAAAADAAARAnsFAAAEA5oKBnMT
AAAKCwJ7BgAABBlvEgAACgwWDSs0H2ECewYAAAQfGm8SAAAKWNETBAJ7BgAABAZvFAAACm8SAAAK
EwUHEQURBG8VAAAKCRdYDQkIMsgHbxYAAAoqEzAEAHMAAAAEAAARAhuNGAAAAQoGFnIVAABwogYX
chsAAHCiBhhyIQAAcKIGGXInAABwogYaci0AAHCiBn0EAAAEAhuNGAAAAQsHFnIzAABwogcXckEA
AHCiBxhyXwAAcKIHGXJ7AABwogcacosAAHCiB30FAAAEAigBAAAGKioCAwQFKBcAAAoqOgIWA4wZ
AAABKBgAAAoqWgMsCAIWKBkAAAoqcpkAAHBzGgAACnomAhcDKBgAAAoqWgMsCAIXKBkAAAoqcpkA
AHBzGgAACnomAhgDKBgAAAoqWgMsCAIYKBkAAAoqcpkAAHBzGgAACnoeAigbAAAKKh4CKBwAAAoq
HgIoHQAACio6AigeAAAKAgN9BwAABCo6AigeAAAKAgN9CAAABCqWAnsIAAAEbx8AAApyNgEAcG8g
AAAKKCEAAApvIgAACqUZAAABKh4CKB4AAAoqAAATMAMALQAAAAUAABF+CQAABC0gclABAHDQBwAA
AigkAAAKbyUAAApzJgAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqLnMdAAAG
gAsAAAQqHgIoKQAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAA
AAUAbAAAAHAGAAAjfgAA3AYAAMgIAAAjU3RyaW5ncwAAAACkDwAAxAEAACNVUwBoEQAAEAAAACNH
VUlEAAAAeBEAAPwBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+iUzABYAAAEAAAAlAAAACAAA
AAsAAAAeAAAAEgAAACkAAAAPAAAABQAAAAQAAAAKAAAACwAAAAEAAAAFAAAAAQAAAAAACgABAAAA
AAAGAPEA0AAGAAEB0AAKAB4BFwEOADoBJQESAJsB0AAGAKoB0AAKAPABFwEKAGIDUQMKAJMDfgMK
AHYEXAQKAKEEjwQKALgEjwQKANUEjwQKAPQEjwQKAA0FjwQKACYFjwQKAEEFjwQKAFwFjwQKAHUF
jwQKAK4FjgUKAM4FjgUGAC0G0AAKAGUGWQYKAHMGFwEKAJgGFwEKAK8GFwEWABQH7AYWADsH7AYH
AFQHAAAWAIQH7AYKAMMHsAcKAOAHFwEKAOUHFwEKAAkIjwQOADUIHwgOAE4IHwgKAGMIjgUAAAAA
AQAAAAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAQABgABABAASwAAAAkABwALAAEAEABb
AAAADQAHABUAAQAQAGcAAAANAAgAFgAAABAAcQB7AA0ACQAYAAABEACqAHsAEQALABwABgBbABMA
BgBnABcABgBLAB8AIQDYAS8AIQDkAS8AAQD3ATMAAQAjA2UAAQAjA2UAEQByA3MAEQCfA3cAEQDj
A5UAUCAAAAAAhhhSARsAAQBwIAAAAADGAVgBGwABAHIgAAAAAIEAZgEbAAEAkCAAAAAAxgC4ASMA
AQDlIAAAAADGAcQBGwAFAOcgAAAAAMYA/gEbAAUA+CAAAAAAxgDEARsABQBuIQAAAACGAAkCNwAF
AHghAAAAAIYAGAI3AAYA5CEAAAAAhhhSARsABwBjIgAAAACGGFIBPAAHAG4iAAAAAIYIJwJGAAoA
fSIAAAAAhgguAksACwCUIgAAAACGCDwCUAAMAJ4iAAAAAIYIUQJLAA0AtSIAAAAAhghtAlAADgC/
IgAAAACGCIMCSwAPANYiAAAAAIYAoAIbABAA3iIAAAAAhgCnAhsAEADmIgAAAACGALYCVQAQAO4i
AAAAAIYYUgFpABAA/SIAAAAAhhhSAWkAEQAMIwAAAACGCDMDbwASADIjAAAAAIMYUgEbABIAPCMA
AAAAkwivA3sAEgB1IwAAAACTCMMDgAASAHwjAAAAAJMIzwOFABIAhCMAAAAAlgjzA5kAEwCXIwAA
AACGGFIBGwATAIsjAAAAAJEYfggnARMAAAABAAcEAAACAA8EAAADABkEAAAEACEEAAABACsEAAAB
ACsEAAABADEEAAACADgEAAADACEEAAABAEwEAAABAEwEAAABAEwEAAABAEwEAAABAEwEAAABAEwE
AAABAFIEAAABAFIEAAABAEwEUQBSAVAAWQBSAVAAYQBSAVAAaQBSAVAAcQBSAVAAeQBSAVAAgQBS
AVAAiQBSAVAAkQBSAVAAmQBSAVAAoQBSAUYAqQBSARsACQBSARsACQAQBqMACQAcBqoAsQBSARsA
OQBSAUYAOQBUBrkAuQBSAVAAwQB6Bm8AuQCFBsQAGQCPBsoAEQBSATwAEQCeBt8AEQCnBkYA0QBS
AVAAEQCgAhsAEQCnAhsAEQC2AlUAGQBSARsACQAlB+UA2QBLB+oACQBvB/AA4QCcB/UA+QBSARsA
AQH3B/sAAQESCAQBQQBSAQoBGQFSARcBKQFSARsAIQBSARsALgAbAJwBLgBjANoBLgALACsBLgAT
AHMBLgAjAJwBLgArAKIBLgAzAHMBLgA7ALEBLgBDAJwBLgBbANEBYwCDALQA4wAbAbQACQE7AR4B
KQE7AR4BYQFDAbQAsAC+AM4A2AASAQQAAQAGAAcABwAIAAgACgAAAMICWQAAAMUCXQAAAM8CYQAA
AOACXQAAAPgCYQAAAAoDXQAAAEQDWQAAAGIDiwAAANsDkAAAAP8DngABAAwAAwABAA0ABQABAA4A
BwABAA8ACQABABAACwABABEADQACABcADwACABkAEQACABoAEwABABsAEwACABwAFQAEgAAAAQAA
AOMQ3WoAAAAAAADsBQAACwAAAAAAAAAAAAAAAQCzAAAAAAAEAAAAAAAAAAAAAAAKAA4BAAAAAAQA
AAAAAAAAAAAAAAoAFwEAAAAACwAAAAAAAAAAAAAAAQB6AQAAAAALAAAAAAAAAAAAAAABAMkGAAAA
AAAAAAABAAAAhQgAAAAAAAAAPE1vZHVsZT4AU0NfNzRlOWQ3NWE5ODhmNDBjZmFiZjE2ZDYwMjMy
ZTM2ZWEuZGxsAFVzZXJDb21wb25lbnQAU2NyaXB0TWFpbgBMb2NhdGlvbnNCdWZmZXIAQ29ubmVj
dGlvbnMAVmFyaWFibGVzAFJlc291cmNlcwBTQ183NGU5ZDc1YTk4OGY0MGNmYWJmMTZkNjAyMzJl
MzZlYS5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1ZmZl
cgBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAC5jdG9yAEZpbmlzaE91dHB1dHMATWFya091dHB1dHNGaW5pc2hlZABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFw
AFByaW1lT3V0cHV0AENyZWF0ZU5ld091dHB1dFJvd3MAQ291bnRyeUNvZGUAQ291bnRyeU5hbWUA
UmFuZG9tAHJhbmRvbQBQcmVFeGVjdXRlAEdldENvdW50cnlDb2RlAEdldENvdW50cnlOYW1lAHNl
dF9pZABzZXRfaWRfSXNOdWxsAHNldF9Db3VudHlSZWdpb25Db2RlAHNldF9Db3VudHlSZWdpb25D
b2RlX0lzTnVsbABzZXRfQ291bnRyeVJlZ2lvbk5hbWUAc2V0X0NvdW50cnlSZWdpb25OYW1lX0lz
TnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQARW5kT2ZSb3dzZXQAaWQAaWRfSXNOdWxsAENvdW50
eVJlZ2lvbkNvZGUAQ291bnR5UmVnaW9uQ29kZV9Jc051bGwAQ291bnRyeVJlZ2lvbk5hbWUAQ291
bnRyeVJlZ2lvbk5hbWVfSXNOdWxsAFBhcmVudENvbXBvbmVudABnZXRfTnVtYmVyT2ZSb3dzAE51
bWJlck9mUm93cwBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291
cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5j
ZQBnZXRfRGVmYXVsdABEZWZhdWx0AE91dHB1dHMAT3V0cHV0SURzAEJ1ZmZlcnMAT3V0cHV0TWFw
AGluZGV4AEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVj
dGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVy
c2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNzRl
OWQ3NWE5ODhmNDBjZmFiZjE2ZDYwMjMyZTM2ZWEAR2V0T3V0cHV0SUQAR2V0Q29sdW1uSW5kZXhl
cwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBOZXh0AFN5c3RlbS5UZXh0
AFN0cmluZ0J1aWxkZXIAU3RyaW5nAGdldF9MZW5ndGgAc2V0X0NoYXJzAFRvU3RyaW5nAEludDMy
AHNldF9JdGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBNaWNyb3NvZnQuU3Fs
U2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3Jh
cHBlcgBJRFRTVmFyaWFibGVzMTAwAGdldF9SZWFkT25seVZhcmlhYmxlcwBJRFRTVmFyaWFibGUx
MDAAZ2V0X0l0ZW0AU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRl
eHQASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0VmFsdWVXaXRoQ29udGV4dABTeXN0ZW0uRGlh
Z25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ183NGU5ZDc1YTk4OGY0MGNmYWJmMTZk
NjAyMzJlMzZlYS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAABNMAG8AYwBhAHQAaQBv
AG4AcwAABUYAUgAABUcAQgAABVUAUwAABUQARQAABUMAQQAADUYAcgBhAG4AYwBlAAAdVQBuAGkA
dABlAGQAIABLAGkAbgBnAGQAbwBtAAAbVQBuAGkAdABlAGQAIABTAHQAYQB0AGUAcwAAD0cAZQBy
AG0AYQBuAHkAAA1DAGEAbgBhAGQAYQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAg
AGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkA
ZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0
AGUAYQBkAC4AABlOAHUAbQBiAGUAcgBPAGYAUgBvAHcAcwAAcVMAQwBfADcANABlADkAZAA3ADUA
YQA5ADgAOABmADQAMABjAGYAYQBiAGYAMQA2AGQANgAwADIAMwAyAGUAMwA2AGUAYQAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAb5ZygplarQY4bSUtFmB01AAiJ
hF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQMGEhALIAQBCB0IHRIVEhkDBh0OAwYSHQQgAQ4I
CSADARIVHQgSGQQgAQEIBCABAQIEIAEBDgMgAAIDKAAIAygAAgMoAA4DBhIFBSABARIFAyAACAMG
EiEDBhIlBAAAEiEEAAASJQUAAQESJQQIABIhBAgAEiUDBhIgBAAAEiAECAASIAYAAggSGQ4FIAEd
CAgDBwEIBAEAAAAEIAEICAUHAwgICAUgAgEIAwMgAA4JBwYOEl0ICAMIBgcCHQ4dDgUgAgEIHAQg
ABJtBSABEnEcBAAAEnUFIAEcEnkIAAESgIERgIUFIAASgIkHIAIBDhKAiQQHARIhBiABARGAkQgB
AAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNzRlOWQ3NWE5ODhmNDBjZmFiZjE2ZDYw
MjMyZTM2ZWEAAAUBAAAAAA4BAAlNaWNyb3NvZnQAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQg
MjAxMQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAAPQ3AAAAAAAA
AAAAAA44AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAD4AwAAAAAAAAAAAAD4AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA3WrjEAAAAQDdauMQPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEWAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAANAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAANAAKAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYA
dAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA3ADQAZQA5
AGQANwA1AGEAOQA4ADgAZgA0ADAAYwBmAGEAYgBmADEANgBkADYAMAAyADMAMgBlADMANgBlAGEA
AABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANAAzADIAMwAuADIANwAz
ADUANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA3ADQAZQA5AGQA
NwA1AGEAOQA4ADgAZgA0ADAAYwBmAGEAYgBmADEANgBkADYAMAAyADMAMgBlADMANgBlAGEALgBk
AGwAbAAAAFwAGwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8AZgB0ACAAMgAwADEAMQAAAAAAeAAoAAEATwByAGkAZwBp
AG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADcANABlADkAZAA3ADUAYQA5ADgAOABmADQA
MABjAGYAYQBiAGYAMQA2AGQANgAwADIAMwAyAGUAMwA2AGUAYQAuAGQAbABsAAAAaAAkAAEAUABy
AG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA3ADQAZQA5AGQANwA1AGEAOQA4ADgAZgA0ADAA
YwBmAGEAYgBmADEANgBkADYAMAAyADMAMgBlADMANgBlAGEAAABEAA8AAQBQAHIAbwBkAHUAYwB0
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADQAMwAyADMALgAyADcAMwA1ADcAAAAAAEgADwABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADQAMwAyADMALgAyADcAMwA1
ADcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAIDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_74e9d75a988f40cfabf16d60232e36ea</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$Package::NumberOfRows</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">e36b64129cebcbaa04a0c7bbb8caab0f</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Locations]"
                  hasSideEffects="true"
                  name="Locations">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountyRegionCode]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountyRegionCode]"
                      name="CountyRegionCode" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountryRegionName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Locations].Columns[CountryRegionName]"
                      name="CountryRegionName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[0]"
              endId="Package\Data Flow Task\DQS Cleansing.Inputs[DQS Cleansing Input]"
              name="0"
              startId="Package\Data Flow Task\Conditional Split 1.Outputs[0]" />
            <path
              refId="Package\Data Flow Task.Paths[1]"
              endId="Package\Data Flow Task\DQS Cleansing 1.Inputs[DQS Cleansing Input]"
              name="1"
              startId="Package\Data Flow Task\Conditional Split 1.Outputs[1]" />
            <path
              refId="Package\Data Flow Task.Paths[DQS Cleansing Output]"
              endId="Package\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
              name="DQS Cleansing Output"
              startId="Package\Data Flow Task\DQS Cleansing.Outputs[DQS Cleansing Output]" />
            <path
              refId="Package\Data Flow Task.Paths[DQS Cleansing Output1]"
              endId="Package\Data Flow Task\Row Count 1.Inputs[Row Count Input 1]"
              name="DQS Cleansing Output"
              startId="Package\Data Flow Task\DQS Cleansing 1.Outputs[DQS Cleansing Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Locations]"
              endId="Package\Data Flow Task\Conditional Split 1.Inputs[Conditional Split Input]"
              name="Locations"
              startId="Package\Data Flow Task\Script Component.Outputs[Locations]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="193,42"
          Id="Package\Data Flow Task"
          TopLeft="49.5,24.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="149,42"
          Id="Package\Data Flow Task\DQS Cleansing"
          TopLeft="158.5,191.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Data Flow Task\Script Component"
          TopLeft="261,26" />
        <AnnotationLayout
          Text="CountryRegionCode is 2 characters long.&#xA;CountryRegionName may contain typos."
          ParentId="Package\Data Flow Task"
          FontInfo="{assembly:Null}"
          Size="302,58"
          Id="ea386e57-1b1d-4c17-b370-6256c993f9ce"
          TopLeft="602,37" />
        <NodeLayout
          Size="165,42"
          Id="Package\Data Flow Task\Conditional Split 1"
          TopLeft="267,108" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Locations]"
          TopLeft="346.25,68">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[0]"
          TopLeft="349.5,150">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-116.5,41.5"
              Start="0,0"
              End="-116.5,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.75"
                    Point2="0,20.75"
                    Point3="-4,20.75" />
                  <mssgle:LineSegment
                    End="-112.5,20.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-112.5,20.75"
                    Point2="-116.5,20.75"
                    Point3="-116.5,24.75" />
                  <mssgle:LineSegment
                    End="-116.5,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.57421875,25.75,4.6484375,7.568359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="149,42"
          Id="Package\Data Flow Task\DQS Cleansing 1"
          TopLeft="368.5,187" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[1]"
          TopLeft="375.666666666667,150">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.3333333333334,37"
              Start="0,0"
              End="67.3333333333334,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.0132052821128" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.0132052821128"
                    Point2="0,15.0132052821128"
                    Point3="4,15.0132052821128" />
                  <mssgle:LineSegment
                    End="63.3333333333334,15.0132052821128" />
                  <mssgle:CubicBezierSegment
                    Point1="63.3333333333334,15.0132052821128"
                    Point2="67.3333333333334,15.0132052821128"
                    Point3="67.3333333333334,19.0132052821129" />
                  <mssgle:LineSegment
                    End="67.3333333333334,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="31.8942057291667,20.0132052821129,3.544921875,7.294921875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="131,42"
          Id="Package\Data Flow Task\Row Count"
          TopLeft="164,275" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[DQS Cleansing Output]"
          TopLeft="231.25,233.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.5"
              Start="0,0"
              End="0,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="140,42"
          Id="Package\Data Flow Task\Row Count 1"
          TopLeft="374.5,271" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[DQS Cleansing Output1]"
          TopLeft="443.75,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>